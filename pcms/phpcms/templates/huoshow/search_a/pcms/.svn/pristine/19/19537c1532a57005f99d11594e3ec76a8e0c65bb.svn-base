<?php
defined('IN_PHPCMS') or exit('No permission resources.');
class MY_index extends index {
	function __construct() {
		parent::__construct();
	}
	
	
	//列表页
	public function lists() {
		$catid = intval($_GET['catid']);
		$_priv_data = $this->_category_priv($catid);
		if($_priv_data=='-1') {
			$forward = urlencode(get_url());
			showmessage(L('login_website'),APP_PATH.'index.php?m=member&c=index&a=login&forward='.$forward);
		} elseif($_priv_data=='-2') {
			showmessage(L('no_priv'));
		}
		$_userid = $this->_userid;
		$_username = $this->_username;
		$_groupid = $this->_groupid;
	
		if(!$catid) showmessage(L('category_not_exists'),'blank');
		$siteids = getcache('category_content','commons');
		$siteid = $siteids[$catid];
		$CATEGORYS = getcache('category_content_'.$siteid,'commons');
	
		if(!isset($CATEGORYS[$catid])) showmessage(L('category_not_exists'),'blank');
		$CAT = $CATEGORYS[$catid];
		$siteid = $GLOBALS['siteid'] = $CAT['siteid'];
		extract($CAT);
		//$categorydir不能正确获得，在这里强制获得
		$this->url = pc_base::load_app_class('url', 'content');
		$categorydir = $this->url->get_categorydir($catid);
		
		$setting = string2array($setting);
	
		//SEO
		if(!$setting['meta_title']) $setting['meta_title'] = $catname;
		$SEO = seo($siteid, '',$setting['meta_title'],$setting['meta_description'],$setting['meta_keywords']);
		define('STYLE',$setting['template_list']);
		$page = $_GET['page'];
	
		$template = $setting['category_template'] ? $setting['category_template'] : 'category';
		$template_list = $setting['list_template'] ? $setting['list_template'] : 'list';
	
		if($type==0) {
			$template = $child ? $template : $template_list;
			$arrparentid = explode(',', $arrparentid);
			//顶级栏目ID
			$top_parentid = $arrparentid[1] ? $arrparentid[1] : $catid;
			//二级栏目ID
			$top2_parentid = $arrparentid[2] ? $arrparentid[2] : $catid;
			$array_child = array();
			$self_array = explode(',', $arrchildid);
			//获取一级栏目ids
			foreach ($self_array as $arr) {
				if($arr!=$catid && $CATEGORYS[$arr][parentid]==$catid) {
					$array_child[] = $arr;
				}
			}
			$arrchildid = implode(',', $array_child);
			//URL规则
			$urlrules = getcache('urlrules','commons');
			$urlrules = str_replace('|', '~',$urlrules[$category_ruleid]);
			$tmp_urls = explode('~',$urlrules);
			$tmp_urls = isset($tmp_urls[1]) ?  $tmp_urls[1] : $tmp_urls[0];
			preg_match_all('/{\$([a-z0-9_]+)}/i',$tmp_urls,$_urls);
			if(!empty($_urls[1])) {
				foreach($_urls[1] as $_v) {
					$GLOBALS['URL_ARRAY'][$_v] = $_GET[$_v];
				}
			}
			define('URLRULE', $urlrules);
			//$categorydir = get_categorydir();
			$GLOBALS['URL_ARRAY']['categorydir'] = $categorydir;
			$GLOBALS['URL_ARRAY']['catdir'] = $catdir;
			$GLOBALS['URL_ARRAY']['catid'] = $catid;
			include template('content',$template);
		} else {
			//单网页
			$this->page_db = pc_base::load_model('page_model');
			$r = $this->page_db->get_one(array('catid'=>$catid));
			if($r) extract($r);
			$template = $setting['page_template'] ? $setting['page_template'] : 'page';
			$arrchild_arr = $CATEGORYS[$parentid]['arrchildid'];
			if($arrchild_arr=='') $arrchild_arr = $CATEGORYS[$catid]['arrchildid'];
			$arrchild_arr = explode(',',$arrchild_arr);
			array_shift($arrchild_arr);
			$keywords = $keywords ? $keywords : $setting['meta_keywords'];
			$SEO = seo($siteid, 0, $title,$setting['meta_description'],$keywords);
			include template('content',$template);
		}
	}
	
	
	
	//内容页
	public function show() {
		$catid = intval($_GET['catid']);
		$id = intval($_GET['id']);
		$game = $_GET['g']; //小游戏详细页参数
		if(!$catid || !$id) showmessage(L('information_does_not_exist'),'blank');
		$_userid = $this->_userid;
		$_username = $this->_username;
		$_groupid = $this->_groupid;
	
		$page = intval($_GET['page']);
		$page = max($page,1);
		$siteids = getcache('category_content','commons');
		$siteid = $siteids[$catid];
		$CATEGORYS = getcache('category_content_'.$siteid,'commons');
	
		if(!isset($CATEGORYS[$catid]) || $CATEGORYS[$catid]['type']!=0) showmessage(L('information_does_not_exist'),'blank');
		$this->category = $CAT = $CATEGORYS[$catid];
		$this->category_setting = $CAT['setting'] = string2array($this->category['setting']);
		$siteid = $GLOBALS['siteid'] = $CAT['siteid'];

		$MODEL = getcache('model','commons');
		$modelid = $CAT['modelid'];
	
		$tablename = $this->db->table_name = $this->db->db_tablepre.$MODEL[$modelid]['tablename'];
		$r = $this->db->get_one(array('id'=>$id));
		if(!$r || $r['status'] != 99) showmessage(L('info_does_not_exists'),'blank');
	
		$this->db->table_name = $tablename.'_data';
		$r2 = $this->db->get_one(array('id'=>$id));
		$rs = $r2 ? array_merge($r,$r2) : $r;
	
		//再次重新赋值，以数据库为准
		$catid = $CATEGORYS[$r['catid']]['catid'];
		$modelid = $CATEGORYS[$catid]['modelid'];
	
		require_once CACHE_MODEL_PATH.'content_output.class.php';
		$content_output = new content_output($modelid,$catid,$CATEGORYS);
		$data = $content_output->get($rs);
		extract($data);
		//检查文章会员组权限
		if($groupids_view && is_array($groupids_view)) {
			$_groupid = param::get_cookie('_groupid');
			$_groupid = intval($_groupid);
			if(!$_groupid) {
				$forward = urlencode(get_url());
				showmessage(L('login_website'),APP_PATH.'index.php?m=member&c=index&a=login&forward='.$forward);
			}
			if(!in_array($_groupid,$groupids_view)) showmessage(L('no_priv'));
		} else {
			//根据栏目访问权限判断权限
			$_priv_data = $this->_category_priv($catid);
			if($_priv_data=='-1') {
				$forward = urlencode(get_url());
				showmessage(L('login_website'),APP_PATH.'index.php?m=member&c=index&a=login&forward='.$forward);
			} elseif($_priv_data=='-2') {
				showmessage(L('no_priv'));
			}
		}
		if(module_exists('comment')) {
			$allow_comment = isset($allow_comment) ? $allow_comment : 1;
		} else {
			$allow_comment = 0;
		}
		//阅读收费 类型
		$paytype = $rs['paytype'];
		$readpoint = $rs['readpoint'];
		$allow_visitor = 1;
		if($readpoint || $this->category_setting['defaultchargepoint']) {
			if(!$readpoint) {
				$readpoint = $this->category_setting['defaultchargepoint'];
				$paytype = $this->category_setting['paytype'];
			}
				
			//检查是否支付过
			$allow_visitor = self::_check_payment($catid.'_'.$id,$paytype);
			if(!$allow_visitor) {
				$http_referer = urlencode(get_url());
				$allow_visitor = sys_auth($catid.'_'.$id.'|'.$readpoint.'|'.$paytype).'&http_referer='.$http_referer;
			} else {
				$allow_visitor = 1;
			}
		}
		//最顶级栏目ID
		$arrparentid = explode(',', $CAT['arrparentid']);
		$top_parentid = $arrparentid[1] ? $arrparentid[1] : $catid;
		//获取二级栏目ID
		$arrparentid2 = explode(',', $CATEGORYS[$catid][arrparentid]);
		$top2_parentid = $arrparentid2[2] ? $arrparentid2[2] : $catid;
		$top_parent_catname = getCatNameFromCatid($top_parentid);
		$template = $template ? $template : $CAT['setting']['show_template'];
		if(!$template) $template = 'show';
		//SEO
		$seo_keywords = '';
		if(!empty($keywords)) $seo_keywords = implode(',',$keywords);
		$SEO = seo($siteid, $catid, $title, $description, $seo_keywords);
	
		define('STYLE',$CAT['setting']['template_list']);
		if(isset($rs['paginationtype'])) {
			$paginationtype = $rs['paginationtype'];
			$maxcharperpage = $rs['maxcharperpage'];
		}
		$pages = $titles = '';
		echo '1111';
		echo $pages;
		//$description = htmlspecialchars($description);
		
		if($modelid == 3)//如果是图片模型，则另外处理
		{
			$pagenumber = count($pictureurls);
			$current_imgno = $page-1;
			$pre_img = ($page==1)?-1:$page-1;
			$next_img = ($page==$pagenumber)?-1:$page+1;
			
			$this->url = pc_base::load_app_class('url', 'content');
			for($i=1; $i<=$pagenumber; $i++) 
			{
				$pageurls[$i] = $this->url->show($id, $i, $catid, $r["inputtime"]);
				/*
				for($j=0;$j<count($pageurls[$i]);$j++)
				{
					$pageurls[$i][$j]=str_replace("&a=show&","&a=showpic&",$pageurls[$i][$j]);
				}
				*/
			}
			$pages = content_pages($pagenumber,$page, $pageurls);
			
			$this->db->table_name = $tablename;
			//上一个图集
			$previous_page = $this->db->get_one("`catid` = '$catid' AND `id`<'$id' AND `status`=99",'*','id DESC');
			//下一个图集
			$next_page = $this->db->get_one("`catid`= '$catid' AND `id`>'$id' AND `status`=99");
		}
		else
		{
			//支持资讯模型发组图
			
			if(!empty($pictureurls))
			{
				$pagenumber = count($pictureurls);
				if($img_attachment_mode!=2)
				{
					$current_imgno = $page-1;
					$pre_img = ($page==1)?-1:$page-1;
					$next_img = ($page==$pagenumber)?-1:$page+1;
						
					$this->url = pc_base::load_app_class('url', 'content');
					for($i=1; $i<=$pagenumber; $i++)
					{
						$pageurls[$i] = $this->url->show($id, $i, $catid, $r["inputtime"]);
							/*
							for($j=0;$j<count($pageurls[$i]);$j++)
							 {
							$pageurls[$i][$j]=str_replace("&a=show&","&a=showpic&",$pageurls[$i][$j]);
							}
							*/
					}
					$pages = content_pages($pagenumber,$page, $pageurls);		
					$this->db->table_name = $tablename;
					//上一个图集
					//$previous_page = $this->db->get_one("`catid` = '$catid' AND `id`<'$id' AND `status`=99",'*','id DESC');
					//下一个图集
					//$next_page = $this->db->get_one("`catid`= '$catid' AND `id`>'$id' AND `status`=99");
					
					$tmparr = $this->db->sselect("select a.* from v9_news a,v9_news_data b
							where a.id=b.id and a.catid = '$catid' AND a.`id`<'$id' AND a.`status`=99
							and b.pictureurls!='' and img_attachment_mode=1 order by id desc limit 0,1");
					
					$previous_page = $tmparr[0];
					$tmparr = $this->db->sselect("select a.* from v9_news a,v9_news_data b
							where a.id=b.id and a.catid = '$catid' AND a.`id`>'$id' AND a.`status`=99
							and b.pictureurls!='' and img_attachment_mode=1 order by id asc limit 0,1");
					$next_page = $tmparr[0];
				}
			}
			if($rs['paginationtype']==1) {
				//自动分页
				if($maxcharperpage < 10) $maxcharperpage = 500;
				$contentpage = pc_base::load_app_class('contentpage');
				$content = $contentpage->get_data($content,$maxcharperpage);
			}
			if($rs['paginationtype']!=0) {
				//手动分页
				$CONTENT_POS = strpos($content, '[page]');
				if($CONTENT_POS !== false) {
					$this->url = pc_base::load_app_class('url', 'content');
					$contents = array_filter(explode('[page]', $content));
					$pagenumber = count($contents);
					if (strpos($content, '[/page]')!==false && ($CONTENT_POS<7)) {
						$pagenumber--;
					}
					for($i=1; $i<=$pagenumber; $i++) {
						$pageurls[$i] = $this->url->show($id, $i, $catid, $rs['inputtime']);
					}
					$END_POS = strpos($content, '[/page]');
					if($END_POS !== false) {
						if($CONTENT_POS>7) {
							$content = '[page]'.$title.'[/page]'.$content;
						}
						if(preg_match_all("|\[page\](.*)\[/page\]|U", $content, $m, PREG_PATTERN_ORDER)) {
							foreach($m[1] as $k=>$v) {
								$p = $k+1;
								$titles[$p]['title'] = strip_tags($v);
								$titles[$p]['url'] = $pageurls[$p][0];
							}
						}
					}
					//当不存在 [/page]时，则使用下面分页
					$pages = content_pages($pagenumber,$page, $pageurls);
					//判断[page]出现的位置是否在第一位
					if($CONTENT_POS<7) {
						$content = $contents[$page-1];
					} else {
						if ($page==1 && !empty($titles)) {
							$content = $title.'[/page]'.$contents[$page-1];
						} else {
							$content = $contents[$page-1];
						}
					}
					if($titles) {
						list($title, $content) = explode('[/page]', $content);
						$content = trim($content);
						if(strpos($content,'</p>')===0) {
							$content = '<p>'.$content;
						}
						if(stripos($content,'<p>')===0) {
							$content = $content.'</p>';
						}
					}
				}
			}
			$this->db->table_name = $tablename;
			//上一页
			if(empty($previous_page)) $previous_page = $this->db->get_one("`catid` = '$catid' AND `id`<'$id' AND `status`=99",'*','id DESC');
			//下一页
			if(empty($next_page)) $next_page = $this->db->get_one("`catid`= '$catid' AND `id`>'$id' AND `status`=99");
		}
			
		
		
		if(empty($previous_page)) {
			$previous_page = array('title'=>L('first_page'), 'thumb'=>IMG_PATH.'nopic_small.gif', 'url'=>'javascript:alert(\''.L('first_page').'\');');
		}
	
		if(empty($next_page)) {
			$next_page = array('title'=>L('last_page'), 'thumb'=>IMG_PATH.'nopic_small.gif', 'url'=>'javascript:alert(\''.L('last_page').'\');');
		}
		
		$pages = str_replace('http://www.huoshow.com/games/','http://game.huoshow.com/',$pages);
		//小游戏详细页处理
		if(!empty($game)){
			include template('content','show_small_game');
		}else{
			include template('content',$template);
		}
	}

	
	public function getSpecialCssHtml()
	{
		$tmplate_name = $_GET["templatename"];
		$special_id = $_GET["specialid"];
		if(!empty($special_id))
		{
			$dbarr = $this->db->sselect("select index_template
					from v9_special where id='$special_id'");
			$css_file = $dbarr[0]["css_file"];
		}
		else 
		{
			$css_file = "default_blue.css";
		}
		$tag_class = pc_base::load_app_class('content_tag','content');
		$arr = $tag_class->getCssfileFromSpecialname($tmplate_name);
		include template('special','special_css_file','huoshow');
	}
	
	/**
	 *	专题扩展属性
	 */
	public function getSpecialProperty()
	{
		$type_id = $_GET["id"];
		$special_id = $_GET["special_id"];
		
		$dbarr = $this->db->sselect("SELECT id,parentid,`name` AS list_name FROM v9_special_list WHERE parentid=$type_id");
		for ($i = 0; $i < count($dbarr); $i++) {
			$arr = $this->db->sselect("SELECT id AS data_id,`name` AS data_name FROM v9_special_list_data WHERE `type`=".$dbarr[$i]['id']);
			for ($j = 0; $j < count($arr); $j++) {
				$dbarr[$i][data][$j][data_id] = $arr[$j][data_id];
				$dbarr[$i][data][$j][data_name] = $arr[$j][data_name];
			}	
		}
		include template('special','special_property_file','huoshow');
//		print_r($dbarr);
		
	}
}
?>